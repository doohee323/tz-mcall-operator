apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mcall-operator.fullname" . }}
  namespace: {{ include "mcall-operator.namespace" . }}
  labels:
    {{- include "mcall-operator.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.controller.replicas }}
  {{- end }}
  strategy:
    {{- toYaml .Values.controller.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "mcall-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mcall-operator.selectorLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- include "mcall-operator.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "mcall-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: controller
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: {{ include "mcall-operator.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: metrics
          containerPort: {{ .Values.service.metrics.port }}
          protocol: TCP
        - name: webhook
          containerPort: {{ .Values.service.webhook.targetPort }}
          protocol: TCP
        {{- include "mcall-operator.env" . | nindent 8 }}
        env:
        - name: NAMESPACE
          value: {{ include "mcall-operator.namespace" . | quote }}
        - name: LEADER_ELECTION_NAMESPACE
          value: {{ include "mcall-operator.namespace" . | quote }}
        - name: LEADER_ELECTION_ID
          value: {{ include "mcall-operator.fullname" . | quote }}
        - name: RECONCILE_INTERVAL
          value: {{ .Values.controller.reconcileInterval | quote }}
        - name: TASK_TIMEOUT
          value: {{ .Values.controller.taskTimeout | quote }}
        {{- if .Values.logging.enabled }}
        # Load logging configuration from ConfigMap
        envFrom:
        - configMapRef:
            name: {{ include "mcall-operator.fullname" . }}-logging-config
        
        # Load sensitive data from Secret
        {{- if .Values.logging.postgresql.enabled }}
        - secretRef:
            name: {{ include "mcall-operator.fullname" . }}-logging-secret
        {{- end }}
        {{- if .Values.logging.mysql.enabled }}
        - secretRef:
            name: {{ include "mcall-operator.fullname" . }}-logging-secret
        {{- end }}
        {{- if .Values.logging.elasticsearch.enabled }}
        - secretRef:
            name: {{ include "mcall-operator.fullname" . }}-logging-secret
        {{- end }}
        {{- end }}
        {{- include "mcall-operator.resources" . | nindent 8 }}
        {{- include "mcall-operator.livenessProbe" . | nindent 8 }}
        {{- include "mcall-operator.readinessProbe" . | nindent 8 }}
        volumeMounts:
        {{- if .Values.webhook.enabled }}
        - name: webhook-certs
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
        {{- end }}
        - name: logs-volume
          mountPath: /app/log/mcall
      volumes:
      {{- if .Values.webhook.enabled }}
      - name: webhook-certs
        secret:
          secretName: {{ include "mcall-operator.webhookCertSecretName" . }}
      {{- end }}
      - name: logs-volume
        emptyDir: {}
      {{- include "mcall-operator.nodeSelector" . | nindent 6 }}
      {{- include "mcall-operator.affinity" . | nindent 6 }}
      {{- include "mcall-operator.tolerations" . | nindent 6 }}


